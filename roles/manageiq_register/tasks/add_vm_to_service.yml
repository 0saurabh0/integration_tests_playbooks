---
#- hosts: localhost
#  tasks:
#    - debug: var=manageiq.api_url
#    - debug: var=manageiq.api_token
#    - debug: var=manageiq.service
#    - debug: var=manageiq.event_target

- name: debug all
  debug: msg="{{ manageiq }}"

- name: debug service
  debug: msg="{{ manageiq.service }}"
- name: debug api_url
  debug: msg="{{ manageiq.api_url }}"
- name: debug token
  debug: msg="{{ manageiq.api_token }}"
- name: debug event target
  debug: msg="{{ manageiq.event_target }}"

- name: Set the Service URL
  set_fact:
    svc_url: "/api/{{ manageiq.service }}"
    #svc_url: "{{ manageiq_services_url }}"

- name: Set the VM URL
  set_fact:
    vm_url: "/api/{{ manageiq.event_target }}"

- debug: var=svc_url

- name: Create an array of vms
  set_fact:
    vms: "{{ vms|default([]) + [ { 'href': svc_url, 'resource':  { 'href': item } } ] }}"
  with_items:
    - "{{ vm_url }}"

- debug: var=vms

- name: Register vms with the service
  uri:
    # url: "{{ manageiq.api_url }}/api/services"
    url: "{{ manageiq_api_url }}"
    method: POST
    body_format: json
    body:
      action: add_resource
      resources : "{{ vms }}"
    validate_certs: False
    headers:
      #X-Auth-Token: "{{ manageiq.api_token }}"
      X-Auth-Token: "{{ auth_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: output

- debug: var=output.json.results[0].success

- name: Check if the VM was successfully attached to service
  fail: msg="{{output.json.results[0].message}}"
  when: output.json.results[0].success == false
